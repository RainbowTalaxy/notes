第五章 if语句

Python中逻辑运算符是 and / or （而不是 && 和 ||）
判断包含关系可以用 in / not in ，比如：
3 in [1, 2, 3, 4]    #返回True

对于列表，如果列表为空，即  [] 或者 len( list ) == 0 ，返回False
反之，则返回True



第六章 字典

一个简单的字典：
dict = { x1 : y1, x2 : y2 }
字典是一系列 键-值 对，其中 x 是键， y 是值，键与值一一对应
访问方式：
dict[x1]    #返回 y1

字典是动态结构，对新键的赋值就是一条添加语句：
dict[x3] = y3    #添加了 x3键，并赋值 y3
该若x3存在且已赋值，则只修改x3的值
可使用 del 语句来删除键值对：
del dict[x1]    #删除了 x1 键以及其值 y1

多行字典定义的格式：
dict = {
	x1 : y1,    #缩进用制表符（四个空格）
	x2 : y2,
	...
	}              #最后一行花括号也需要用制表符

同时遍历字典中键值：
for key, value in dict.items() :    #key 和 value 可根据需要自定义名称
	...

遍历键：
for x in dict.keys() :    #若要顺序遍历，则需要对 dict.keys() 使用 sorted 函数
	...

判断是否存在键：
if x1 (not) in dict.keys() :    #keys() 方法会返回一个键列表
	...

同样，如果是要遍历字典中的值，可以用 values() 方法
