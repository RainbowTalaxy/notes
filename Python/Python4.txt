第七章 用户输入和while循环

Python27中的 raw_input 和 Python37中的 input 一样

for循环是一种遍历列表的有效方式
但在for循环中不应该修改列表，否则将导致Python难以跟踪其中的元素
要在遍历列表的同时对其进行修改，可使用while循环

空列表的逻辑表达式是False

使用while删除包含特定值的所有列表元素：
alpha = [ 'A', 'B', 'C', 'A', 'B', 'C' ]
while 'A' in alpha :
	alpha.remove('A')

使用字典前需要先定义容器



第八章 函数

使用关键字实参时，最好每个参数都补上关键字
形参列表中，必须先列出没有默认值的形参，再列出有默认值的形参
默认值所对应的实参可以为空（无需补上逗号）
在形参中传递列表，默认上不会拷贝列表再传递
因此在函数中可能会修改原列表
如果要禁止函数修改列表，即 将列表的副本传递给函数
可以在形参中列表后面加上 [ : ] （切片），比如：
function_name( list_name[ : ], ... )

如果要传递任意数量的实参，形参中的最后一个参数前可以加上 * ，比如：
def function( *tuple ) :
	...
其中，函数中会生成一个元组 tuple
注意，任意数量形参必须放最后

使用任意数量的关键字实参，可以在最后一个形参前加上 ** ，比如：
def function( **dict ) :
	...
function( x1 = y1, x2 = y2, ... )
其中，函数会生成一个字典 dict

导入模块，模块是扩展名为.py的文件，可以将函数写入模块中
然后在主程序中导入模块

导入整个模块的格式为：
import module    #文件名不需要写.py扩展名
在调用该模块时需要在函数前写上模块名，比如：
module.function1()
如果要给模块起别名可以用：
import module as m

若要导入模块中特定函数，可以用：
from module import function1, function2, ...
或者用 * 引入所有函数，比如：
from module import *
若要给指定函数起别名可以用：
from module import function1 as f1
